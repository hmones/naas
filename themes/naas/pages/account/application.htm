title = "Application"
url = "/account/application/round/:id"
layout = "default"
is_hidden = 0

[Countries]
[Application]

[session]
security = "user"
redirect = "account/login"
==
<div class="ui stackable grid">
    <div class="five wide column">
        <div class="ui fluid vertical right attached steps">
            {% for section in sections %}
            <a class="{{loop.index == 1? 'active':''}} step" id="section_btn_{{section.id}}"
                style="border-bottom:4px solid rgba(253,210,186,.15);" onclick="activateSection({{section.id}});" section="{{section.id}}">
                <i class="{{section.icon}} red icon" style="font-size:17px;"></i>
                <div class="content">
                    <div class="title">{{str_limit(section.theme,24)}}</div>
                    <div class="description">{{str_limit(section.description,30)}}</div>
                </div>
            </a>
            {% endfor %}
        </div>
    </div>
    <div class="eleven wide column">
        {{form_ajax({request:'onSubmit'}, {files:true , class:'ui form submit', id:'main_form'})}}
        <input type="hidden" value="draft" name="applicationStatus"/>
        {% for section in sections %}
        <div class="ui attached {{loop.index == 1? 'active':''}} segment" id="section_content_{{section.id}}"
            style="{{loop.index == 1? '':'display:none;'}} border:none;">
            <div class="ui header">{{section.theme}}</div>
            <div class="ui divider"></div>
            <div class="ui form">
                {% for question in section.questions %}
                {% partial 'account/renderQuestions' question=question countries=countries %}
                {% endfor %}
            </div>
        </div>
        {% endfor %}
        <div class="ui segment">
            <a href="javascript:void(0);" onclick="prevSection();" class="ui basic red button"> <i class="left arrow icon"></i>Back</a>
            <a href="javascript:void(0);" onclick="nextSection();" class="ui basic red button"><i class="right arrow icon"></i> Next</a>
            <a href="javascript:void(0);" id="saveDraft" class="ui red button"><i class="save icon"></i> Save draft</a>
            <a href="javascript:void(0);" id="submitForm" class="ui green button"><i class="check icon"></i> Submit</a>
        </div>
        {{form_close()}}
    </div>
</div>

{% put scripts %}
<script>
    var repeatGroupsCounter = [];
    var repeat_groups = $.parseJSON('{{ repeat_groups | raw }}');
    var responses_json = '{{ group_responses | raw }}';
    var group_responses = []
    if(responses_json != ''){
        group_responses = Object.values($.parseJSON());
    }
     
    
    
    var validationMessage = "Error in user input, Enter again";
    var validationEmptyMessage = "There are missing input fields!";
    
    function activateSection(section) {
        var section_btn = '#section_btn_' + section;
        var section_content = '#section_content_' + section;
        $('a.active.step').removeClass('active');
        $(section_btn).addClass('active');
        $('div.ui.attached.active.segment').removeClass('active').hide();
        $(section_content).addClass('active').fadeIn();
    }
    function prevSection(){
        var currSection = parseInt($('a.active.step').attr("section"));
        var nextSection = currSection - 1;
        if($('a[section='+nextSection+']').length){
            activateSection(nextSection);
        }
    }
    function nextSection(){
        var currSection = parseInt($('a.active.step').attr("section"));
        var nextSection = currSection + 1;
        if($('a[section='+nextSection+']').length){
            activateSection(nextSection);
        }
    }
    function toogleCondQuestions(elem){
        var selector = 'div[data-condition=' + elem.attributes.dataoption.value + ']';
        $(selector).parent().show();
        $(selector).fadeIn();
        $(selector+'[data-required="yes"]').addClass('required');
        $(elem).addClass("active");
        $('input[type=radio]:not(:checked).active').map(function (index, option) {
            $(option).removeClass("active");
            var selector = 'div[data-condition=' + option.attributes.dataoption.value + ']';
            $(selector).fadeOut().removeClass('required');
        });
    }
    function displayErrorField(elem, msg){
        $(elem).val('').attr('placeholder', msg);
        $(elem).parent().addClass("error");
    }
    function removeErrorField(elem){
        $(elem).parent().removeClass("error");
    }
    function validateEmptyFields(){
        var isFormValid = true;
        var validationResults = [];
        $('a[id^="section_btn_"]>div.floating.label').remove();
        $('div[id^="field_"]').removeClass('error');
        $('div[id^="field_"].required').each(function(index, elem){
            var type = IntegerValue($(elem).attr('type'));
            var theme = IntegerValue($(elem).attr('data-theme'));
            $(elem).find('input[name^="q_"],textarea[name^="q_"]').each(function(inputIndex, inputElem){
                function validationProcedure(element){
                    //Count the appearance of the validation issue
                    validationResults[theme] = IntegerValue(validationResults[theme]) + 1;
                    //Display an error on the field
                    displayErrorField(element,"");
                }
                switch(type){
                    //Checkbox & Radio Inputs
                    case 2:
                    case 3:
                        var name = $(inputElem).attr('name'); 
                        if(!$('[name="'+name+'"]:checked').length && !name.includes("other")){
                            validationProcedure($(inputElem).parent().parent());
                        }
                        break;
                    //Attachments
                    case 5:
                        if($(inputElem).siblings('div.ui.basic.message').length === 0){
                            validationProcedure(inputElem);
                        }
                        break;
                    //All other types of input
                    default:
                        if($(inputElem).val()===""){
                            validationProcedure(inputElem);
                        }
                        break;
                }
            });
        });
        validationResults.forEach(function(value, index){
            $('#section_btn_'+index+'').append('<div class="floating ui red circular label">'+value+'</div>')
        });
        if(validationResults.length != 0){
            $('#FlashMessage').html('<div class="ui negative message">'+validationEmptyMessage+'</div>');
            window.scrollTo(0,0);
            return isFormValid = false;
        }
        return isFormValid;
    }
    function IntegerValue(field){
        var number = parseInt(field);
        if(isNaN(number)){
            return 0;
        }
        return number;
    }
    function handleRepeat(group) {
        var data_prev = $('#q_group_' + group).html();
        var currentGroup = "[group][1]";
        repeatGroupsCounter[group]++;
        var nextGroup = "[group]["+repeatGroupsCounter[group]+"]";
        var data_current = '<div><a href="javascript:void(0)" class="ui right floated basic segment" onclick="$(this).parent().empty();"><i class="close red icon"></i></a>'
            + data_prev.replaceAll(currentGroup,nextGroup) +
            '</div>';
        $('#repeat_group_' + group + '_container')
            .append(data_current);
        $('#repeat_group_' + group + '_container > div > div.repeat.group.addons').remove();
        $('#repeat_group_' + group + '_container > div > div > div.ui.header.question').remove();
        $('.ui.dropdown').dropdown();
    }
    function totalPercentageLimit(changedQuestion, questions, totalField=""){
        var totalPercent = 0;
        questions.forEach(function(question){
            totalPercent = totalPercent + IntegerValue($('#q_'+question+'').val());
        });
        if(totalPercent > 100){
                displayErrorField(changedQuestion, validationMessage);
            }else{
                removeErrorField(changedQuestion);
            if(totalField != ""){
                $('#q_'+totalField+'').val(totalPercent);
            }
        }   
    }
    $('#saveDraft').click(function(){
        $('input[name="applicationStatus"]').val('draft');
        $(this).addClass('loading');
        $('#main_form').submit();
    })
    $('#submitForm').click(function(){
        var isFormValid = validateEmptyFields();
        if(isFormValid){
            $('input[name="applicationStatus"]').val('final');
            $(this).addClass('loading');
            $('#main_form').submit();
        }
    });
    $('input[type=radio][dataoption]').change(function () {
        toogleCondQuestions(this);
    });
    
    $(function () {
        repeat_groups.forEach(group => {
            $('div[group=' + group.group + ']').wrapAll('<div id="q_group_' + group.group + '" class="ui repeating pink segment"/>');
            $('#q_group_' + group.group)
                .append(
                    '<div class="repeat group addons"><div id="repeat_group_'
                    + group.group +
                    '_container"></div><a href="javascript:void(0)" onclick="handleRepeat('
                    + group.group +
                    ')" class="ui basic red right floated button repeater"><i class="plus icon"></i>'
                    + group.repeat_text +
                    '</a><div><br></br>'
                );
            if ($('#q_group_' + group.group).children().css("display") == "none") {
                $('#q_group_' + group.group).hide();
            }
            repeatGroupsCounter[group.group] = 1;
        });
        //Toogle conditional questions as saved before
        $.each($('input[type=radio][dataoption][checked]'), function(key,elem){
            toogleCondQuestions(elem);
        });
        // Load previously saved inputs in groups
        group_responses.forEach(function(value){
            var length = Object.keys(value.text.group).length;
            if(length>repeatGroupsCounter[value.question.group]){
                var repetitions = length - repeatGroupsCounter[value.question.group];
                for (i = 0; i < repetitions; i++) {
                    handleRepeat(value.question.group);
                }
            }
            Object.values(value.text.group).forEach(function(array,key){
                var type = value.question.type;
                //Text & Text Area & Dropdown & Country
                if(type === 0 || type === 1 || type === 4 || type === 7){
                    if(array.hasOwnProperty('content')){
                        $('[name="q_'+value.question.id+'[group]['+(key+1)+'][content]"]').val(array.content);
                    }
                }
                //Checkboxes & Radio
                if(type === 2 || type === 3){
                    if(array.hasOwnProperty('options')){
                        array.options.forEach(function(optionID){
                            $('[name="q_'+value.question.id+'[group]['+(key+1)+'][options][]"][value='+optionID+']').attr('checked','');
                        });
                    }
                    if(array.hasOwnProperty('other')){
                        $('[name="q_'+value.question.id+'[group]['+(key+1)+'][other]"]').val(array.other).siblings('.valueOther').attr('checked','');
                    }
                }
                //Phone
                if(type === 8){
                    if (array.hasOwnProperty("phone")){
                        if (array.phone.hasOwnProperty("number")){
                            $('[name="q_'+value.question.id+'[group]['+(key+1)+'][phone][number]"]').val(array.phone.number);
                         }
                         if (array.phone.hasOwnProperty("code")){
                            $('[name="q_'+value.question.id+'[group]['+(key+1)+'][phone][code]"]').val(array.phone.code);
                        }
                    }
                }
                //Language Percentage
                if(type === 9){
                    if (array.hasOwnProperty("language")){
                        if (array.language.hasOwnProperty("name")){
                            $('[name="q_'+value.question.id+'[group]['+(key+1)+'][language][name]"]').val(array.language.name);
                            $('.ui.dropdown').dropdown();
                         }
                         if (array.language.hasOwnProperty("percentage")){
                            $('[name="q_'+value.question.id+'[group]['+(key+1)+'][language][percentage]"]').val(array.language.percentage);
                        }
                    }
                }
                //File Upload
                if(type === 5){
                    if(array.hasOwnProperty('file')){
                        var message = '<div class="ui basic message"><strong>Uploaded file:</strong> '+array.file+'</div>';
                        $(message).insertBefore('[name="q_'+value.question.id+'[group]['+(key+1)+']"]');
                    }
                }
            });
            
        });

    });   
    $('input[type=text], textarea').change(function () {
        function isInputValid(regexValidation, inputValue) {
            var pattern = new RegExp(regexValidation);
            return pattern.test(inputValue);
        };
        if (!isInputValid($(this).attr('validation'), $(this).val())) {
            displayErrorField(this, validationMessage);
        } else {
            removeErrorField(this);
        }
    });
    $('body').delegate('input.q_percentage', 'change' , function () {
        var questionSelector = $(this).attr('name').replace(/\[.*\]/gi, "");
        var totalPercent = 0;
        $('[name^="'+questionSelector+'"].q_percentage').each(function(index, elem){
            totalPercent = totalPercent + IntegerValue($(elem).val());
        });
        if(totalPercent > 100){
            displayErrorField(this, validationMessage);
        }else{
            removeErrorField(this);
        }   
        
    });
    $('body').delegate('input.inputOther', 'change', function(){
        var data = '["other" => '+$(this).val()+']';
        $(this).siblings('.valueOther').val(data);
    });
    $('body').delegate('input[type=text],textarea','change',function(){
        var data = $(this).val();
        $(this).val(data.replace("'","`"));
    });
    
    $('.ui.dropdown').dropdown();
</script>
{% endput %}